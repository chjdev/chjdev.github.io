<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.3.2" created="2016-01-10 16:21" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Things on a Heap</title>
	<link>http://chjdev.com</link>
	<description>A Collection of Programming Ramblings by chjdev</description>
	<pubDate>Sun, 10 Jan 2016 16:21:37 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://chjdev.com</wp:base_site_url>
	<wp:base_blog_url>http://chjdev.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>chjdev</wp:author_login><wp:author_email>chjdev@gmail.com</wp:author_email><wp:author_display_name><![CDATA[chjdev]]></wp:author_display_name><wp:author_first_name><![CDATA[Christian]]></wp:author_first_name><wp:author_last_name><![CDATA[Junker]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>compsci-basics</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[CompSci Basics]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>2</wp:term_id><wp:category_nicename>functional</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Functional]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>general</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[General]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>java</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Java]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>programming</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Programming]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>python</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Python]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>science</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Science]]></wp:cat_name></wp:category>
	<wp:term><wp:term_id>8</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>menu</wp:term_slug><wp:term_name><![CDATA[Menu]]></wp:term_name></wp:term>

	<generator>http://wordpress.org/?v=4.3.2</generator>

	<item>
		<title>Freelancer</title>
		<link>http://chjdev.com/?page_id=2</link>
		<pubDate>Wed, 09 Apr 2014 12:43:37 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.personal-webspace.de/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[<script>// < ![CDATA[
// < ![CDATA[
// < ![CDATA[
// < ![CDATA[
// < ![CDATA[ !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');
// ]]]]><![CDATA[></script>
<img class=" size-full wp-image-179 aligncenter" src="http://chjdev.com/wp-content/uploads/2014/04/2b94b43.jpg" alt="Profile" width="200" height="200" />
I'm a hacker, entrepreneur... something like that. I'm a polymath, interested in all sorts of problems worth solving, e.g. data warehousing, image processing, artificial intelligence, software architectures, photography etc.
I love learning new things, solving puzzles and to help people, it's my vocation. That's why I decided to be my own boss as a freelancer and help awesome people and business to be even more awesome.
If you have a problem worth solving, just send me a message.
<a class="twitter-follow-button" href="https://twitter.com/chjdev" data-show-count="false">Follow @chjdev</a>
<hr />
<h2>Recommendations</h2>
<h3>Christoph Holz, CEO at visalyze GmbH.</h3>
(for CTO at visalyze GmbH.)
It was a joy seeing Christian's journey from visalyze's first developer, to the CTO of the company. During his time with us I witnessed his intelligence and creativity, as well as his professionalism and "getting it done" attitude. He showed exceptional technical skills and was able to quickly adapt to any challenge.
Christian was an invaluable asset in building and leading the company. In a time of high uncertainty, his level-headedness even in the most stressful and heated situations gave the company a lot of stability. With his calm and democratic leadership style he cultivated an atmosphere of mutual respect throughout the whole company. I have no hesitation in recommending him to any future employer. I would be pleased to re-employ Christian. I can't wait to see where his path will take him and wish him the best of luck.

<h3>Allan Lund Hansen, Co-Founder at Dropz</h3>
(for CTO at visalyze GmbH.)
I had the pleasure of working together with Christian for 2.5 years in a startup environment and am honored to call him a friend, I have no remembrance of him showing up with a negative attitude, which in my opinion is a very valuable asset! As a professional he is very structured and patient as a team leader. Technically no task is too big or small, and everything is not only solved satisfactory but solved with a thought and understanding on the business efficiency as well, which is a rare quality in engineers. I will certainly try to recruit Christian for my new business once it is settled in!

<h3>Florian Peter, Co-Founder & Binary Caretaker at Dropz</h3>
(for CTO at visalyze GmbH.)
Christian is a brilliant mind. I've witnessed him single-handedly build a distributed big data visualization crawling system whose ingenuity and quality is nothing short of mind blowing. 
However, what made an even longer lasting impression on me is his quiet, professional leadership style. I always felt respected and motivated all the way when working under his guidance.

<h3>Walter Rafelsberger, Senior Researcher at webLyzard technology gmbh</h3>
(for Software Engineer at visalyze GmbH.)
Christian was the first developer we hired for a startup and we couldn't have made a better pick. He combines profound knowledge with out-of-the-box thinking. He even finds passion in solving tasks looking mundane for others. His open-mindedness and integrity makes him a great team player. It was both joy and honour to work with you, Christian!
<hr />
<h2>Experience</h2>
<a href="http://at.linkedin.com/in/chjdev"><img src="https://static.licdn.com/scds/common/u/img/webpromo/btn_viewmy_160x25.png" alt="View Christian Junker's profile on LinkedIn" width="160" height="25" border="0" /></a>

<h3>Researcher @ webLyzard technology gmbh</h3>
February 2015 – April 2015

<h3>Sabbatical & Travel</h3>
April 2014 – November 2014

<h3>Chief Technology Officer @ visalyze Gmbh.</h3>
June 2013 – May 2014

<h3>Software Engineer @ visalyze Gmbh.</h3>
November 2011 – June 2013

<h3>Software Engineer @ holzweg e-commerce solutions</h3>
August 2011 – June 2013

<hr />
<h2>Contact</h2>
[contact-form][contact-field label='Name' type='name' required='1'/][contact-field label='Email' type='email' required='1'/][contact-field label='Comment' type='textarea' required='1'/][/contact-form]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2014-04-09 14:43:37</wp:post_date>
		<wp:post_date_gmt>2014-04-09 12:43:37</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>freelancer</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_panels_data_preview</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:7:"widgets";a:4:{i:0;a:5:{s:8:"headline";s:20:"Call To Action Title";s:4:"text";s:24:"And this is some subtext";s:6:"button";s:11:"Action Text";s:3:"url";s:1:"#";s:4:"info";a:4:{s:4:"grid";s:1:"0";s:4:"cell";s:1:"0";s:2:"id";s:1:"1";s:5:"class";s:22:"SiteOrigin_Widgets_CTA";}}i:1;a:5:{s:8:"headline";s:16:"Feature Headline";s:4:"text";s:166:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In bibendum, diam eget consectetur aliquam, velit erat dignissim sapien, mollis aliquam elit lectus id purus.";s:3:"url";s:1:"#";s:4:"icon";s:0:"";s:4:"info";a:4:{s:4:"grid";s:1:"1";s:4:"cell";s:1:"0";s:2:"id";s:1:"2";s:5:"class";s:27:"SiteOrigin_Widgets_IconText";}}i:2;a:5:{s:8:"headline";s:16:"Feature Headline";s:4:"text";s:166:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In bibendum, diam eget consectetur aliquam, velit erat dignissim sapien, mollis aliquam elit lectus id purus.";s:3:"url";s:1:"#";s:4:"icon";s:0:"";s:4:"info";a:4:{s:4:"grid";s:1:"1";s:4:"cell";s:1:"1";s:2:"id";s:1:"3";s:5:"class";s:27:"SiteOrigin_Widgets_IconText";}}i:3;a:5:{s:8:"headline";s:16:"Feature Headline";s:4:"text";s:166:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In bibendum, diam eget consectetur aliquam, velit erat dignissim sapien, mollis aliquam elit lectus id purus.";s:3:"url";s:1:"#";s:4:"icon";s:0:"";s:4:"info";a:4:{s:4:"grid";s:1:"1";s:4:"cell";s:1:"2";s:2:"id";s:1:"4";s:5:"class";s:27:"SiteOrigin_Widgets_IconText";}}}s:5:"grids";a:2:{i:0;a:1:{s:5:"cells";s:1:"1";}i:1;a:1:{s:5:"cells";s:1:"3";}}s:10:"grid_cells";a:4:{i:0;a:2:{s:6:"weight";s:1:"1";s:4:"grid";s:1:"0";}i:1;a:2:{s:6:"weight";s:18:"0.3333333333333333";s:4:"grid";s:1:"1";}i:2;a:2:{s:6:"weight";s:18:"0.3333333333333333";s:4:"grid";s:1:"1";}i:3;a:2:{s:6:"weight";s:18:"0.3333333333333333";s:4:"grid";s:1:"1";}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>content_columns</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_before</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_after</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[If you have a problem worth solving, I'm your man. Data warehousing, image processing, artificial intelligence, software architectures, photography etc.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_g_feedback_shortcode</wp:meta_key>
			<wp:meta_value><![CDATA[[contact-field label='Name' type='name' required='1'/][contact-field label='Email' type='email' required='1'/][contact-field label='Comment' type='textarea' required='1'/]]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>logo</title>
		<link>http://chjdev.com/?attachment_id=8</link>
		<pubDate>Tue, 09 Dec 2014 09:50:54 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.personal-webspace.de/wp-content/uploads/2014/12/logo.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2014-12-09 11:50:54</wp:post_date>
		<wp:post_date_gmt>2014-12-09 09:50:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>logo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://chjdev.com/wp-content/uploads/2014/12/logo.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/12/logo.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:345;s:6:"height";i:345;s:4:"file";s:16:"2014/12/logo.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:16:"logo-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:16:"logo-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[logo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_custom_header_last_used_origami</wp:meta_key>
			<wp:meta_value><![CDATA[1418576322]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
			<wp:meta_value><![CDATA[origami]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>From Monoids to Monads in Python</title>
		<link>http://chjdev.com/monoids-monads-python/</link>
		<pubDate>Tue, 09 Dec 2014 13:46:13 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.personal-webspace.de/?p=11</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="/wp-content/uploads/2014/12/First_matryoshka_museum_doll_open.jpg"><img class="alignnone size-medium wp-image-32 aligncenter" src="/wp-content/uploads/2014/12/First_matryoshka_museum_doll_open-300x211.jpg" alt="Monads and Monoids are kind of like a Matryoshka doll. Photo By: RK812, Doll carved by Zvezdochkin, painted by Malyutin (Sergiev Posad Museum of Toys, Russia) [Public domain], via Wikimedia Commons" width="300" height="211" /></a>
Monads are a concept you will run into sooner or later when you learn about functional programming. They are usually stylized as being very intricate and mind bending. In my opinion that's not true. Granted, the math behind it is quite intricate, but using them in your programs is actually quite straight forward.
In the most general sense, Monads are a smart way to structure a functional program and handle side effects. One of the most trivial Monads for example will simply execute functions in a specified order.

<!--more-->

Why is that interesting? Well, in purely functional programming languages the concept of statements that get executed sequentially doesn't really apply. Why is that? A functional program basically consists of calling a function which is composed of smaller functions, which are composed of smaller functions, and so on. This makes sense because "pure" functions don't have any side effects, e.g. updating a global state, which means that it is guaranteed to return the same result each time it is called with the same parameters. So calling different functions in a sequence basically equates to running different programs, since they have no way of influencing each other.

However, in real world use cases handling side effects is unavoidable, e.g. you probably want to handle user input. Handling these side effects and still complying with the basic structure of a functional program is where Monads come in.

In this article we will build the concept of a Monad from the ground up using a very pragmatic high level view, that focuses on the application instead of the math. To cause less confusion we will use Python to implement the examples because the syntax is probably the most familiar, the concepts however don't change in other languages. Monads are a general concept that can be implemented in one way or another in any language.
<h2>Function Composition</h2>
If you start reading about Monads you will probably see the word <a href="https://en.wikipedia.org/wiki/Monoid">Monoid</a> being thrown around. The mathematical definition of a Monoid is: <em>an algebraic structure with a single associative binary operation and an identity element</em>.
It sounds complicated but is pretty simple actually, and example would be the <code>+</code> operator: <code>a + b + c = (a + b) + c + 0= (a + (b + c)) + 0 + 0</code>
<code>0</code> is the identity element in this specific case. Everything that behaves that way is a Monoid. Note: although <code>+</code> is <a href="https://en.wikipedia.org/wiki/Commutative_property">commutative</a> it is not a requirement. The Monoid we will use is <a href="https://en.wikipedia.org/wiki/Function_composition">"Function Composition."</a>

Let's work our way up. Let's say the only things you can do in functional programs is defining and calling functions. But how can you structure your program like that? First lets define some functions to work with:

[sourcecode language="python" collapse="false"]
def f(x: int) -&gt; int: return ~x
def g(x: int) -&gt; int: return x ** 2
def h(x: int) -&gt; int: return 2 * x
[/sourcecode]

Note: I'm using <code>int</code>s here but any types can be used as long as the functions can be legally combined, more on that later.

The straight forward way to create a program from these functions is calling the functions with the respective result of calling the other functions:

[sourcecode language="python" collapse="false"]
x = 1
assert f(g(h(x))) == -5
assert h(g(f(x))) == 8
[/sourcecode]

In the first example we start by calling h with the variable x, then call g with the result of h and finally call f with the result of g.
This notation however is not very flexible and quickly becomes unwieldy. Function composition to the rescue! Let's say we have two functions, <code>f</code> and <code>g</code>, which we want to combine into one function <code>c</code>. The mathematical notation for this composition is <code>g ∘ f</code>.
<div style="text-align: center;"><code>c(x) = (g ∘ f)(x) = g(f(x))</code></div>
In Python this translates to the following:

[sourcecode language="python" collapse="false"]
def combine(x: '(int) -&gt; int', y: '(int) -&gt; int') -&gt; '(int) -&gt; int':
    return lambda _: x(y(_))
[/sourcecode]

Note: unfortunately Python doesn't have a good way to type hint function objects, so i use <code>(int) -&gt; int</code> to say: a function that takes an <code>int</code> and returns an <code>int</code>. Again it doesn't have to be <code>int</code> and can be anything as long as the types match up.

If you want to compose more than 2 functions, simply use <code>combine</code> repeatedly with new functions and the result of a previous <code>combine</code>. Since Monoids follow associativity rules the order in which they are combined doesn't matter, as long as the general order of operations is preserved.

[sourcecode language="python" collapse="false"]
assert combine(f, combine(g, h))(x) == \
       combine(combine(f, g), h)(x) == -5
[/sourcecode]

Still pretty cumbersome to write but at least it is more general. Let's take a quick detour and use a cool Python hack which allows us to create <a href="http://code.activestate.com/recipes/384122/">infix operators</a>.

[sourcecode language="python" collapse="false"]
ø = Infix(combine)
assert (f |ø| g |ø| h)(x) != (h |ø| g |ø| f)(x)
assert (f |ø| g |ø| h)(x) == f(g(h(x)))
[/sourcecode]

The <code>ø</code> symbol was chosen because it's valid Python and resembles the mathematical notation.
If you squint, this almost looks like statements in an imperative language. You start with an <code>x</code> then you do <code>h</code> followed by <code>g</code> followed by <code>f</code> and arrive at a result.

Monads behave very similar to this concept. You probably already heard the line: "A monad is just a monoid in the category of endofunctors, what's the problem?" We already know how Monoids work. Now however we will change the type of the functions that will be used.
<h2>Down the rabbit hole: Monads</h2>
Previously we used function of the form <code>(a) -&gt; a</code> (for <code>a</code> meaning any type). For Monads however we will now use functions of the form <code>(a) -&gt; M a</code>. The <code>M a</code> indicates a type constructor. Basically it's just a wrapper that wraps a type and needs to be evaluated to create (in this case) an <code>a</code>.

Our approach for function composition doesn't work any more since we can't simply combine two <code>(a) -&gt; M a</code> functions. E.g. if we change the type of our functions <code>f</code> and <code>g</code> to use a type constructor, <code>g(f(x))</code> doesn't work since both functions expect an <code>a</code> as an argument, the result of <code>f</code> however is an <code>M a</code>. It's better to look at some real code to understand this.
<h3>The Trivial Monad</h3>
Let's build the simplest Monad: Trivial. This Monad will simply chain functions analog to our <code>combine</code> example. First let's create our type constructor:

[sourcecode language="python" collapse="false"]
class Trivial():
    def __init__(self, value):
        self._value = value

    def __call__(self, *args, **kwargs):
        return self._value
[/sourcecode]

This wrapper is pretty useless, it just wraps a value and spits it back out when the object is called. However it is useful to have this abstraction for more intricate Monads that allow e.g. I/O or concurrency. We'll later see a Monad that's a bit more useful.

Alright, let's create some functions, that are using this type constructor. We'll just use our previous functions and wrap them in the type constructor:

[sourcecode language="python" collapse="false"]
def tf(x: int) -&gt; Trivial: return Trivial(f(x))
def tg(x: int) -&gt; Trivial: return Trivial(g(x))
def th(x: int) -&gt; Trivial: return Trivial(h(x))
[/sourcecode]

It's obvious now, that you can't just compose the functions because you can't just call e.g. <code>tf</code> with a <code>Trivial</code> object. In order to compose these functions we need a bit more plumbing. We need 2 things: a mechanism that evaluates our type constructor and calls a function with the result, and a way to chain multiple functions. This sounds a bit contrived, but will become clearer once you see it in code.

First, the function to evaluate the type constructor and call a second function - we'll call it <code>bind</code>:

[sourcecode language="python" collapse="false"]
def bind(what: Trivial, other: '(a) -&gt; Trivial') -&gt; Trivial:
    return other(what())
[/sourcecode]

This <code>bind</code> operator is different for each Monad, it depends on the type constructor and what you want to do with it, e.g. you could parallelize the execution. In this trivial example however, we just dig out the value and pass it on to the function.

Now, how can we use this operator to compose multiple functions?

[sourcecode language="python" collapse="false"]
programA = (lambda a: bind(th(a),
              lambda b: bind(tg(b),
                lambda c: tf(c))))(x)
[/sourcecode]

This looks a bit complicated but what it does is actually simple, it just creates some intermediary variables to pass the input through all the functions that will be bound. This probably will take a little time to grok, but just try to run through it a couple of times and it should become clearer.

What have we gained with this mechanism? Well we can now create arbitrary Monads that allow a natural structuring of a functional program and the introduction of side effects.

For fun, let's add some syntactic sugar:

[sourcecode language="python" collapse="false"]
def _do_block(bind, *stmts):
    assert len(stmts) &gt; 0
    if len(stmts) == 1:
        return lambda y: stmts[0](y)
    else:
        return lambda x: bind(stmts[0](x),
                  do_block(bind, *stmts[1:]))

def trivial(*stmts): return _do_block(bind, *stmts)

programB = trivial(
    th,
    tg,
    tf)(x)

assert programA() == programB()
[/sourcecode]

There, looks way better, doesn't it?
<h2>A Variation of the Maybe Monad</h2>
To finish off, we'll create a Monad that is actually useful. This is a variation of the <a href="http://hackage.haskell.org/package/base-4.7.0.1/docs/Data-Maybe.html">Maybe Monad</a> which is found in pretty much all functional languages in one form or another.

Our Monad will allow us to work with functions that may fail to calculate a result, and if they do, stop the remaining computation immediately. Let's look at the code:

[sourcecode language="python" collapse="false"]
class Maybe(): pass

class Just(Maybe):
    def __init__(self, value):
        self._value = value

    def __call__(self, *args, **kwargs):
        return self._value

class Nothing(Maybe): pass

@singledispatch
def bind(what: Just, other: 'def f(a) -&gt; Trivial: pass') -&gt; Maybe:
    return other(what())

@bind.register(Nothing)
def bind_nothing(what: Nothing, _) -&gt; Nothing:
    return what

def maybe(*stmts): return _do_block(bind, *stmts)
[/sourcecode]

Alright, everything in place: a type constructor, a <code>bind</code> operator and some syntactic sugar.
The type constructor <code>Maybe</code> can either be a <code>Just</code> object which wraps a value, or a <code>Nothing</code> object.
The bind method for this Monad will either pass on the wrapped value or immediately return <code>what</code> (i.e. the <code>Nothing</code> object).

Now let's use this Monad. We will create a program that checks for different conditions and print the result.

[sourcecode language="python" collapse="false"]
def mfun1(x: int) -&gt; Maybe:
    print('mfun1', x)
    return Just(x) if (x % 2) == 0 else Nothing()

def mfun2(x: int) -&gt; Maybe:
    print('mfun2', x)
    return Just(x) if (x % 3) == 0 else Nothing()

def mfun3(x: int) -&gt; Maybe:
    print('mfun3', x)
    return Just(x) if (x % 4) == 0 else Nothing()

programC = maybe(
    mfun1,
    mfun2,
    mfun3)
print(programC(12)())
try:
    print(programC(11)())
except:
    print('as expected')
[/sourcecode]

The first example will work since 12 is a valid input for all functions. The second example will fail immediately on the first function, since 11 is not even and the attempt of evaluating <code>Nothing</code> will raise an <code>Exception</code>.

This concludes our little foray into Monads. I hope you now have an overview about what people are talking about when they mention Monads and see the usefulness of the concept.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2014-12-09 15:46:13</wp:post_date>
		<wp:post_date_gmt>2014-12-09 13:46:13</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>monoids-monads-python</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="functional"><![CDATA[Functional]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>content_columns</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[monad]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[91]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Monads are touted to be difficult to grasp. In this article i will show you what they are about by building an example from the ground up using Python.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_before</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_after</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://chjdev.com/14/</link>
		<pubDate>Tue, 09 Dec 2014 10:40:05 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.personal-webspace.de/?p=14</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2014-12-09 12:40:05</wp:post_date>
		<wp:post_date_gmt>2014-12-09 10:40:05</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>14</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="menu"><![CDATA[Menu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>First_matryoshka_museum_doll_open</title>
		<link>http://chjdev.com/monoids-monads-python/first_matryoshka_museum_doll_open/</link>
		<pubDate>Tue, 09 Dec 2014 14:49:01 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.personal-webspace.de/wp-content/uploads/2014/12/First_matryoshka_museum_doll_open.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[By Photo: RK812, Doll carved by Zvezdochkin, painted by Malyutin (Sergiev Posad Museum of Toys, Russia) [Public domain], via Wikimedia Commons]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2014-12-09 16:49:01</wp:post_date>
		<wp:post_date_gmt>2014-12-09 14:49:01</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>first_matryoshka_museum_doll_open</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>11</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://chjdev.com/wp-content/uploads/2014/12/First_matryoshka_museum_doll_open.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/12/First_matryoshka_museum_doll_open.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:500;s:6:"height";i:352;s:4:"file";s:45:"2014/12/First_matryoshka_museum_doll_open.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:45:"First_matryoshka_museum_doll_open-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:45:"First_matryoshka_museum_doll_open-300x211.jpg";s:5:"width";i:300;s:6:"height";i:211;s:9:"mime-type";s:10:"image/jpeg";}s:21:"post-thumbnail-mobile";a:4:{s:4:"file";s:45:"First_matryoshka_museum_doll_open-480x352.jpg";s:5:"width";i:480;s:6:"height";i:352;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
			<wp:meta_value><![CDATA[First matryoshka museum doll open. By Photo: RK812, Doll carved by Zvezdochkin, painted by Malyutin (Sergiev Posad Museum of Toys, Russia) [Public domain], via Wikimedia Commons]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Complexity of Common Search Algorithms</title>
		<link>http://chjdev.com/?p=63</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/?p=63</guid>
		<description></description>
		<content:encoded><![CDATA[In this post I will talk about some common search algorithms and highlight their strengths and weaknesses. An implementation of each is given in Python, Java and Scala. A prerequisite for reading this post is understanding the <a href="http://chjdev.com/reasoning-about-complexity-big-o-notation" target="_blank">Big-O notation</a>. This post will go into some detail for the algorithms, a great resource for a quick cheatsheet is the <a href="http://bigocheatsheet.com/#sorting">Big-O Cheat Sheet</a>. Also I highly recommend the YouTube channel <a href="https://www.youtube.com/channel/UCIqiLefbVHsOAXDAxQJH7Xw">AlgoRythmics</a> for an illustration of some of these algorithms.
<!--more-->

<h2>Classification of Search Algorithms</h2>
Search algorithms can be classified by using different characteristics. In this section we'll take a look at the most important ones.

<h4>Comparison vs. Non-Comparison</h4>
Comparison based algorithms are arguably the more intuitive class of algorithms. They are based on the principle of taking two elements and directly comparing them. This comparison usually follows the "less than or equal," or "three way" semantic, e.g. given two elements $latex A$ and $latex B$ a comparator will return $latex -1, 0, 1$ for the cases $latex A < B, A = B, A > B$ respectively.
The fastest known algorithms for comparison based sorting lie in <a href="#linearithmic">linearithmic (i.e. O(n log(n))</a> class, with (depending on the use case) Quicksort being the fastest version in practice.

Non-Comparison based algorithms use a different approach, they use techniques TODO

<h4>Stable vs Non Stable</h4>
TODO

<h4>In Place vs Auxiliary</h4>
TODO

<h4>Complexity class</h4>
The most interesting classification is based on the complexity of the algorithm TODO

<h2>Quadratic Class</h2>

[table colalign="center|center|center|center|center"]
Algorithm, Time (Best), Time (Average), Time (Worst), Space (Worst)
Bubble Sort,	O(n),	O(n^2),	O(n^2),	O(1)
Insertion Sort,	O(n),	O(n^2),	O(n^2),	O(1)
Select Sort,	O(n^2),	O(n^2),	O(n^2),	O(1)
[/table]


<h2><a class="anchor" name="linearithmic">Linearithmic Class</a></h2>
[table colalign="center|center|center|center|center"]
Algorithm, Time (Best), Time (Average), Time (Worst), Space (Worst), Stable
Quicksort,	O(n log(n)),	O(n log(n)),	O(n^2),	O(n),	NO
Mergesort,	O(n log(n)),	O(n log(n)),	O(n log(n)),	O(n)
Heapsort,	O(n log(n)),	O(n log(n)),	O(n log(n)),	O(1)
[/table]

<h4>Quicksort</h4>
Although all of these algorithms have an $latex O(n log(n))$ complexity (Quicksort even $latex O(n^2)$) Quicksort is the most efficient of the pack <a class="cite" href="http://www.amazon.com/Algorithm-Design-Manual-Steven-Skiena/dp/1849967202">[SkienaS08]</a>. Since they are in the same class this can only be evaluated by experiments and these give (a properly implemented) Quicksort a 2-3x advantage over the rest.

The worst case performance occurs mainly when the leftmost element used as pivot and
<ul>
	<li>the list is already sorted, or</li>
	<li>the list contains only/mostly identical elements.</li>
</ul>
Why is that? Because in both cases the left partition will be empty and $latex N$ elements will have to be checked $latex N$ times, i.e. $latex O(N^2)$. However these problems can be mitigated by optimizations, namely using a different pivot strategy (e.g. median of first, middle, last element) and partitioning the list into 3 parts (left, equal, right) respectively.

The space complexity can be optimized to $latex O(log(n))$ by limiting the stack space used as described in <a class="cite" href="https://dl.acm.org/citation.cfm?doid=359619.359631">[Sedgewick78]</a>

<h4>Mergesort</h4>
Mergesort is usually a good choice for sorting sequential media or linked lists. For linked lists the space complexity of the algorithm can be optimized: since we deal with a recursive algorithm, we need $latex log(n)$ stack frames and some little constant additional space for manipulating the pointers in the linked list, therefore we arrive at $latex O(log(n))$.

<h4>Heapsort</h4>
TODO

<h2>Linear Class</h2>
[table colalign="center|center|center|center|center"]
Algorithm, Time (Best), Time (Average), Time (Worst), Space (Worst)
Bucket Sort,	O(n+k),	O(n+k),	O(n^2),	O(nk)
Radix Sort,	O(nk),	O(nk),	O(nk),	O(n+k)
[/table]


<h2>Exotic Class</h2>

[table colalign="center|center|center|center|center"]
Algorithm, Time (Best), Time (Average), Time (Worst), Space (Worst)
<a href="https://dis.4chan.org/read/prog/1295544154">Sleep Sort</a>
<a href="https://en.wikipedia.org/wiki/Bogosort">Bogo Sort</a>
[/table]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2015-01-01 16:53:40</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="compsci-basics"><![CDATA[CompSci Basics]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_before</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_after</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>content_columns</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[complexity]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[85]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[This is a short summary/overview of the space and time complexity of common search algorithms.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Universal Python Server</title>
		<link>http://chjdev.com/universal-python-server/</link>
		<pubDate>Sat, 03 Jan 2015 09:37:02 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/?p=102</guid>
		<description></description>
		<content:encoded><![CDATA[I recently read a cool post by <a href="https://joearms.github.io/">Joe Armstrong</a> in which he showcases his favorite <a href="http://www.erlang.org/">Erlang</a> program: <a href="https://joearms.github.io/2013/11/21/My-favorite-erlang-program.html">the universal server.</a> The program creates an easily distributable generic server, that can perform any concrete task you tell it to by sending it a function. E.g. it could act as an HTTP server, RPC server, etc.

This little program "suitable for a 10min talk" highlights how awesomely simple Erlang can be for the tasks it was designed to do best. I was intrigued and wanted to see if a comparably simple universal Python server could be created by using only the standard library.
<!--more-->
To make the program distributable the <a href="https://docs.python.org/3/library/multiprocessing.html">multiprocessing</a> module of the standard library will be used. It contains the tools necessary for creating multiple processes and inter process communication.

This version deviates a little bit from Armstrong's program. Instead of a <code>become</code> message, here the function to be performed is included for every task to be performed. It is implemented using 3 components: a <code>manager</code> as central connection point, a <code>worker</code> which will receive generic tasks to be performed and a <code>boss</code> which will schedule said tasks.

Disclaimer: Obviously this is only a simple little experiment, none of this code is intended to be used in anything respectable.

<h3>Manager</h3>
First here is the <code>manager</code> service. It's responsible to provide the communication channels. Both the <code>worker</code> - as well as the <code>boss</code> processes connect to it for discovery.

[sourcecode language="python" collapse="false"]
from multiprocessing.managers import SyncManager
import marshal
import os


class Manager(SyncManager):
    pass

Manager.register('get_job_q')
Manager.register('get_res_q')


def connect(ip, port, auth):
    manager = Manager(address=(ip, port), authkey=auth)
    manager.connect()
    return manager


def remote(func, manager):
    def inner(*args, **kwargs):
        manager.get_job_q().put((marshal.dumps(func.__code__), args, kwargs))
    return inner


if __name__ == '__main__':
    from multiprocessing import Queue
    job_q = Queue()
    res_q = Queue()
    Manager.register('get_job_q', callable=lambda: job_q)
    Manager.register('get_res_q', callable=lambda: res_q)

    manager = Manager(address=('', 1234), authkey=b'abc')
    print(&quot;Manager startet with PID=&quot;, os.getpid())
    manager.get_server().serve_forever()
[/sourcecode]

The first thing that's necessary is to create our own subclass of the 
<a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.managers.SyncManager">SyncManager</a> provided by the multiprocessing module. This is necessary to <code>register</code> the custom methods used. Here 2 methods are registered: a method to access the job queue (which will contain the tasks to be performed) and a method to access the result queue which will communicate the results.

Note: this is a very primitive setup and for example doesn't play nice with multiple bosses. <code>Manager.register</code> is only called with the name of these functions to tell it that they exist, so if the manager is subsequently imported it will be ready to use.

Next up is the <code>connect</code> function. This function is used by the workers and the boss to connect to the same session. This is akin to joining multiple running Erlang beam VMs and allows us to communicate with remote processes.

<code>remote</code> is a decorator for functions that allows to seamlessly send them to remote processes in order to be executed.
It works by taking the decorated function and putting a tuple of its <a href="https://docs.python.org/3/library/marshal.html">marshalled</a> pseudo-compiled code (<code>func.__code__</code>) and arguments in the job queue. The tuple thereby contains everything a remote process needs to know to reconstruct the task.

Note: the marshal module has to be used because it appears that <a href="https://docs.python.org/3/library/pickle.html">pickle</a> module is not powerful enough to handle this specific use cases. Trying to directly pickle the function and loading it in the remote process will lead to an <code>AttributeError</code> because the function is not part of this process, and pickling of the <code>__code__</code> builtin unfortunately doesn't work.

Finally running the manager script will initiate the <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Queue">queues</a> used for communicating and reregister them. Then a manager object is created and instructed to serve forever.

<h3>Worker</h3>

The worker process will perform the tasks scheduled by the boss. It works by getting tasks from the job queue, reconstructing the function of the task, invoking this new function and putting its result into the result queue.

&nbsp;

[sourcecode language="python" collapse="false"]
from manager import connect
import marshal
import types
import os

def universal(job_q, res_q):
    while True:
        funcs, args, kwargs = job_q.get()
        func_code = marshal.loads(funcs)
        func = types.FunctionType(func_code, globals(), 'loaded_func')
        print(&quot;processing &quot;, func, args, kwargs)
        res_q.put((os.getpid(), func(*args, **kwargs)))

if __name__ == '__main__':
    manager = connect('127.0.0.1', 1234, b'abc')
    print(&quot;Worker started with PID=&quot;, os.getpid())
    universal(manager.get_job_q(), manager.get_res_q())
[/sourcecode]

The <code>universal</code> function is the main driver. It takes the job - and result queue as arguments. As stated above the job queue contains triplets with the marshalled function code and the arguments. First the marshalled code is unmarshalled giving us the pseudo-compiled code back. Next a new function is created from this code, it is now part of the process and can be called. Finally a tuple containing this processes id and the result of the invocation is put into the result queue.

When the script is run, it joins the specified manager using <code>connect</code> and then enters the <code>universal</code> function. 

<h3>Boss</h3>

Now this setup can be put to use for arbitrary tasks, for example here is a boss that schedules the calculation of factorials.

[sourcecode language="python" collapse="false"]
from manager import remote, connect
import os

def factorial(n):
    res = 1
    while n &gt; 1:
        res, n = res * n, n - 1
    return res

if __name__ == '__main__':
    manager = connect('127.0.0.1', 1234, b'abc')
    print(&quot;Factorial started with PID=&quot;, os.getpid())

    inputs = range(1, 10)
    for num in inputs:
        remote(factorial, manager)(num)
    for _ in inputs:
        print(manager.get_res_q().get())
[/sourcecode]

As can be seen the factorial function is a completely normal function. If the boss is run, it again connects to a running manager and then uses the <code>remote</code> decorator to schedule the factorial calculations to remote processes.

This is arguably a pretty simple example, so here is something a bit cooler. With this boss the workers will be turned into socket servers that can handle requests on their own!

[sourcecode language="python" collapse="false"]
from manager import connect, remote
import os

def server(port):
    import socket
    host = ''
    backlog = 5
    size = 1024
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind((host,port))
    s.listen(backlog)
    done = False
    print(&quot;start serving&quot;)
    while not done:
        client, address = s.accept()
        data = client.recv(size)
        if data:
            client.send(data)
        client.close()
        done = data.decode().strip() == &quot;QUIT&quot;
    print(&quot;done serving&quot;)
    return port

if __name__ == '__main__':
    manager = connect('127.0.0.1', 1234, b'abc')
    print(&quot;Echo started with PID=&quot;, os.getpid())

    remote(server, manager)(5001)
    remote(server, manager)(5002)
    print(manager.get_res_q().get())
    print(manager.get_res_q().get())
[/sourcecode]

Note: the import in the function is necessary, for it to be reconstructable in the remote process

All in all, this architecture is pretty usable. Using a fleet of these universal servers you basically can build a simple cluster environment that can compute anything. Not only that, it can be dynamically patched with arbitrary new behavior without the need for a restart.

<h2>Conclusion</h2>
As you can see, implementing the universal server in Python is quite a bit more involved than it is in Erlang, but that is understandable because it wasn't specifically designed with this problem in mind. That being said, it is still remarkable how simple this concept can be implemented using only standard library modules. (Production code of course would be quite a bit more complex.)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date>2015-01-03 11:37:02</wp:post_date>
		<wp:post_date_gmt>2015-01-03 09:37:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>universal-python-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_before</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_after</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>content_columns</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[python server]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Based on Joe Armstrong's favorite Erlang program (the "universal server"), I implement a Python server with a little spin: it can serve anything you want!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Read Scientific Papers on Your Kindle</title>
		<link>http://chjdev.com/read-scientific-papers-kindle/</link>
		<pubDate>Sun, 08 Feb 2015 14:43:27 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/?p=136</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="text-align: center;"><a href="http://chjdev.com/wp-content/uploads/2015/02/original.png"><img src="http://chjdev.com/wp-content/uploads/2015/02/original-232x300.png" alt="original" width="232" height="300" class="alignnone size-medium wp-image-153" /></a></div>
Reading scientific on your Kindle (or other eBook reader) usually sucks. The text is normally only available as PDF or PS files and formatted in a way that is meant for printing in A4, or US Letter. A two-column layout is also very common, which further complicates things. In this post I show you a simple way to get these papers on your eBook reader for comfortable reading.
<!--more-->

<div style="text-align: center;"><iframe style="width: 120px; height: 240px;" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;OneJS=1&amp;Operation=GetAdHtml&amp;MarketPlace=US&amp;source=ss&amp;ref=ss_til&amp;ad_type=product_link&amp;tracking_id=chjdev-20&amp;marketplace=amazon&amp;region=US&amp;placement=B00I15SB16&amp;asins=B00I15SB16&amp;linkId=SPXKVXHNXUMSCTRA&amp;show_border=true&amp;link_opens_in_new_window=true" width="300" height="150" frameborder="0" marginwidth="0" marginheight="0" scrolling="no">
</iframe> <iframe style="width: 120px; height: 240px;" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;OneJS=1&amp;Operation=GetAdHtml&amp;MarketPlace=US&amp;source=ss&amp;ref=ss_til&amp;ad_type=product_link&amp;tracking_id=chjdev-20&amp;marketplace=amazon&amp;region=US&amp;placement=B00JG8GOWU&amp;asins=B00JG8GOWU&amp;linkId=2KX4UWXTFMHOSJ5J&amp;show_border=true&amp;link_opens_in_new_window=true" width="300" height="150" frameborder="0" marginwidth="0" marginheight="0" scrolling="no">
</iframe> <iframe style="width: 120px; height: 240px;" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;OneJS=1&amp;Operation=GetAdHtml&amp;MarketPlace=US&amp;source=ss&amp;ref=ss_til&amp;ad_type=product_link&amp;tracking_id=chjdev-20&amp;marketplace=amazon&amp;region=US&amp;placement=B00IOY8XWQ&amp;asins=B00IOY8XWQ&amp;linkId=QFDRMH3SYROOYXL5&amp;show_border=true&amp;link_opens_in_new_window=true" width="300" height="150" frameborder="0" marginwidth="0" marginheight="0" scrolling="no">
</iframe></div>

<h2>Step 1: Preprocessing with <code>BRISS</code></h2>
First we will preprocess the file a bit to make the next step easier / more successful. Using the cool little <a href="http://briss.sourceforge.net/" title="BRISS"><code>BRISS</code></a> tool we will crop out unnecessary parts and only leave the main text area. The idea is to get rid of line numbers, notes in the margin (e.g. the arXiv line in our test document), etc.

<code>BRISS</code> is a graphical tool. You can use the menu to load the PDF or just start it from the terminal:
<code>briss Text\ Understanding\ from\ Scratch.pdf</code>
You will be prompted to enter the range of pages that will be analyzed to find the main text body. Usually it's fine to just leave it at the default. <code>BRISS</code> now tries to find the main text area.

<div style="text-align: center;"><a href="http://chjdev.com/wp-content/uploads/2015/02/briss.png"><img src="http://chjdev.com/wp-content/uploads/2015/02/briss-300x216.png" alt="briss" width="300" height="216" class="alignnone size-medium wp-image-150" /></a></div>

Tweak the boxes until they only cover the relevant text and crop the PDF by clicking <code>Action > Crop PDF</code>. We now have a PDF document with all possibly misleading fluff cut out and can move on to the next step.

<div style="text-align: center;"><a href="http://chjdev.com/wp-content/uploads/2015/02/cropped.png"><img src="http://chjdev.com/wp-content/uploads/2015/02/cropped-225x300.png" alt="cropped" width="225" height="300" class="alignnone size-medium wp-image-151" /></a></div>

<h2>Step 2: Optimizing with <code>k2pdfopt</code></h2>
To optimize the cropped PDF for our Kindle we'll use the <a href="http://www.willus.com/k2pdfopt/" title="k2pdfopt"><code>k2pdfopt</code></a> tool. It has a plethora of <a href="http://www.willus.com/k2pdfopt/help/options.shtml" title="options">options</a> suiting many needs, but the default modes usually work fine.
<code>./k2pdfopt -ppgs -dev kpw -mode 2col Text\ Understanding\ from\ Scratch_cropped.pdf</code>
And that's it, now you have a Kindle optimized PDF!

<div style="text-align: center;"><a href="http://chjdev.com/wp-content/uploads/2015/02/optimized.png"><img src="http://chjdev.com/wp-content/uploads/2015/02/optimized-209x300.png" alt="optimized" width="209" height="300" class="alignnone size-medium wp-image-152" /></a></div>

<b>WARNING</b> the default modes include the <code>-n</code> flag, which will enable native PDF output. This is the preferable mode since it leads to smaller, better files because it uses native PDF instructions instead of rendering the pages to bitmaps. However, (at least the 1st gen Paperwhite) may crash opening files generated with this option, because it runs out of memory. This forced me to factory reset my device a couple of times during first experiments.

<b>Solution</b> either disable native output by specifying <code>-n-</code> leading to bigger, uglier files, or install Ghostscript (if you haven't already) and include the <a href="http://www.willus.com/k2pdfopt/help/faq.shtml"><code style="white-space: nowrap;">-ppgs</code><code></code></a> option. This will post process the file using Ghostscript and fix the issue.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date>2015-02-08 16:43:27</wp:post_date>
		<wp:post_date_gmt>2015-02-08 14:43:27</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>read-scientific-papers-kindle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<category domain="category" nicename="science"><![CDATA[Science]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_before</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_after</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>content_columns</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[kindle]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Read scientific papers comfortably on your kindle with these simple steps.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>briss</title>
		<link>http://chjdev.com/read-scientific-papers-kindle/briss/</link>
		<pubDate>Sun, 08 Feb 2015 14:24:00 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/wp-content/uploads/2015/02/briss.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date>2015-02-08 16:24:00</wp:post_date>
		<wp:post_date_gmt>2015-02-08 14:24:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>briss</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>136</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://chjdev.com/wp-content/uploads/2015/02/briss.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2015/02/briss.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1366;s:6:"height";i:985;s:4:"file";s:17:"2015/02/briss.png";s:5:"sizes";a:7:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"briss-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:17:"briss-300x216.png";s:5:"width";i:300;s:6:"height";i:216;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:18:"briss-1024x738.png";s:5:"width";i:1024;s:6:"height";i:738;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:17:"briss-904x400.png";s:5:"width";i:904;s:6:"height";i:400;s:9:"mime-type";s:9:"image/png";}s:21:"post-thumbnail-mobile";a:4:{s:4:"file";s:17:"briss-480x420.png";s:5:"width";i:480;s:6:"height";i:420;s:9:"mime-type";s:9:"image/png";}s:19:"post-thumbnail-full";a:4:{s:4:"file";s:17:"briss-904x652.png";s:5:"width";i:904;s:6:"height";i:652;s:9:"mime-type";s:9:"image/png";}s:14:"origami-slider";a:4:{s:4:"file";s:17:"briss-904x500.png";s:5:"width";i:904;s:6:"height";i:500;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped</title>
		<link>http://chjdev.com/read-scientific-papers-kindle/cropped/</link>
		<pubDate>Sun, 08 Feb 2015 14:24:11 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/wp-content/uploads/2015/02/cropped.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date>2015-02-08 16:24:11</wp:post_date>
		<wp:post_date_gmt>2015-02-08 14:24:11</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cropped</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>136</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://chjdev.com/wp-content/uploads/2015/02/cropped.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2015/02/cropped.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:710;s:6:"height";i:946;s:4:"file";s:19:"2015/02/cropped.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"cropped-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:19:"cropped-225x300.png";s:5:"width";i:225;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:19:"cropped-710x400.png";s:5:"width";i:710;s:6:"height";i:400;s:9:"mime-type";s:9:"image/png";}s:21:"post-thumbnail-mobile";a:4:{s:4:"file";s:19:"cropped-480x420.png";s:5:"width";i:480;s:6:"height";i:420;s:9:"mime-type";s:9:"image/png";}s:19:"post-thumbnail-full";a:4:{s:4:"file";s:19:"cropped-678x904.png";s:5:"width";i:678;s:6:"height";i:904;s:9:"mime-type";s:9:"image/png";}s:14:"origami-slider";a:4:{s:4:"file";s:19:"cropped-710x500.png";s:5:"width";i:710;s:6:"height";i:500;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>optimized</title>
		<link>http://chjdev.com/read-scientific-papers-kindle/optimized/</link>
		<pubDate>Sun, 08 Feb 2015 14:24:16 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/wp-content/uploads/2015/02/optimized.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2015-02-08 16:24:16</wp:post_date>
		<wp:post_date_gmt>2015-02-08 14:24:16</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>optimized</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>136</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://chjdev.com/wp-content/uploads/2015/02/optimized.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2015/02/optimized.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:680;s:6:"height";i:977;s:4:"file";s:21:"2015/02/optimized.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"optimized-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:21:"optimized-209x300.png";s:5:"width";i:209;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"optimized-680x400.png";s:5:"width";i:680;s:6:"height";i:400;s:9:"mime-type";s:9:"image/png";}s:21:"post-thumbnail-mobile";a:4:{s:4:"file";s:21:"optimized-480x420.png";s:5:"width";i:480;s:6:"height";i:420;s:9:"mime-type";s:9:"image/png";}s:19:"post-thumbnail-full";a:4:{s:4:"file";s:21:"optimized-629x904.png";s:5:"width";i:629;s:6:"height";i:904;s:9:"mime-type";s:9:"image/png";}s:14:"origami-slider";a:4:{s:4:"file";s:21:"optimized-680x500.png";s:5:"width";i:680;s:6:"height";i:500;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>original</title>
		<link>http://chjdev.com/read-scientific-papers-kindle/original/</link>
		<pubDate>Sun, 08 Feb 2015 14:24:23 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/wp-content/uploads/2015/02/original.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date>2015-02-08 16:24:23</wp:post_date>
		<wp:post_date_gmt>2015-02-08 14:24:23</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>original</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>136</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://chjdev.com/wp-content/uploads/2015/02/original.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2015/02/original.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:756;s:6:"height";i:977;s:4:"file";s:20:"2015/02/original.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"original-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:20:"original-232x300.png";s:5:"width";i:232;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:20:"original-756x400.png";s:5:"width";i:756;s:6:"height";i:400;s:9:"mime-type";s:9:"image/png";}s:21:"post-thumbnail-mobile";a:4:{s:4:"file";s:20:"original-480x420.png";s:5:"width";i:480;s:6:"height";i:420;s:9:"mime-type";s:9:"image/png";}s:19:"post-thumbnail-full";a:4:{s:4:"file";s:20:"original-700x904.png";s:5:"width";i:700;s:6:"height";i:904;s:9:"mime-type";s:9:"image/png";}s:14:"origami-slider";a:4:{s:4:"file";s:20:"original-756x500.png";s:5:"width";i:756;s:6:"height";i:500;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Supervising Python with Erlang</title>
		<link>http://chjdev.com/?p=171</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/?p=171</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>171</wp:post_id>
		<wp:post_date>2015-02-20 10:11:30</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_before</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_after</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>content_columns</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[robustness]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[43]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Combine the ease of use and adaptability of Python with the robustness of Erlang/OTP to build maintainable bullet proof systems.]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Brigitte - 2015-05-05 00:30:22</title>
		<link>http://chjdev.com/?post_type=feedback&#038;p=173</link>
		<pubDate>Mon, 04 May 2015 22:30:22 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/?post_type=feedback&#038;p=173</guid>
		<description></description>
		<content:encoded><![CDATA[Hi, my name is Brigitte and I am the marketing manager at SwingSEO Solutions. I was just looking at your About | Things on a Heap site and see that your website has the potential to get a lot of visitors. I just want to tell you, In case you don't already know... There is a website network which already has more than 16 million users, and the majority of the users are looking for topics like yours. By getting your website on this service you have a chance to get your site more popular than you can imagine. It is free to sign up and you can read more about it here: http://stg2bio.co/10fz - Now, let me ask you... Do you need your site to be successful to maintain your way of life? Do you need targeted traffic who are interested in the services and products you offer? Are looking for exposure, to increase sales, and to quickly develop awareness for your site? If your answer is YES, you can achieve these things only if you get your website on the network I am describing. This traffic service advertises you to thousands, while also giving you a chance to test the service before paying anything. All the popular websites are using this service to boost their traffic and ad revenue! Why aren’t you? And what is better than traffic? It’s recurring traffic! That's how running a successful website works... Here's to your success! Read more here: http://stg2bio.co/10fz  - or to unsubscribe please go here: http://todochiapas.mx/C/36p
<!--more-->
AUTHOR: Brigitte
AUTHOR EMAIL: pttewhd@ymail.com
AUTHOR URL: 
SUBJECT: [Things on a Heap] About
IP: 104.168.46.51
Array
(
    [1_Name] =&gt; Brigitte
    [2_Email] =&gt; pttewhd@ymail.com
    [3_Comment] =&gt; Hi, my name is Brigitte and I am the marketing manager at SwingSEO Solutions. I was just looking at your About | Things on a Heap site and see that your website has the potential to get a lot of visitors. I just want to tell you, In case you don't already know... There is a website network which already has more than 16 million users, and the majority of the users are looking for topics like yours. By getting your website on this service you have a chance to get your site more popular than you can imagine. It is free to sign up and you can read more about it here: http://stg2bio.co/10fz - Now, let me ask you... Do you need your site to be successful to maintain your way of life? Do you need targeted traffic who are interested in the services and products you offer? Are looking for exposure, to increase sales, and to quickly develop awareness for your site? If your answer is YES, you can achieve these things only if you get your website on the network I am describing. This traffic service advertises you to thousands, while also giving you a chance to test the service before paying anything. All the popular websites are using this service to boost their traffic and ad revenue! Why aren’t you? And what is better than traffic? It’s recurring traffic! That's how running a successful website works... Here's to your success! Read more here: http://stg2bio.co/10fz  - or to unsubscribe please go here: http://todochiapas.mx/C/36p
)
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date>2015-05-05 00:30:22</wp:post_date>
		<wp:post_date_gmt>2015-05-04 22:30:22</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>581b07c8d1072371b1786afda051daba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>2</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>feedback</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_feedback_extra_fields</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_feedback_akismet_values</wp:meta_key>
			<wp:meta_value><![CDATA[a:49:{s:14:"comment_author";s:8:"Brigitte";s:20:"comment_author_email";s:17:"pttewhd@ymail.com";s:18:"comment_author_url";s:0:"";s:20:"contact_form_subject";s:24:"[Things on a Heap] About";s:17:"comment_author_IP";s:13:"104.168.46.51";s:15:"comment_content";s:1447:"Hi, my name is Brigitte and I am the marketing manager at SwingSEO Solutions. I was just looking at your About | Things on a Heap site and see that your website has the potential to get a lot of visitors. I just want to tell you, In case you don't already know... There is a website network which already has more than 16 million users, and the majority of the users are looking for topics like yours. By getting your website on this service you have a chance to get your site more popular than you can imagine. It is free to sign up and you can read more about it here: http://stg2bio.co/10fz - Now, let me ask you... Do you need your site to be successful to maintain your way of life? Do you need targeted traffic who are interested in the services and products you offer? Are looking for exposure, to increase sales, and to quickly develop awareness for your site? If your answer is YES, you can achieve these things only if you get your website on the network I am describing. This traffic service advertises you to thousands, while also giving you a chance to test the service before paying anything. All the popular websites are using this service to boost their traffic and ad revenue! Why aren’t you? And what is better than traffic? It’s recurring traffic! That's how running a successful website works... Here's to your success! Read more here: http://stg2bio.co/10fz  - or to unsubscribe please go here: http://todochiapas.mx/C/36p";s:12:"comment_type";s:12:"contact_form";s:7:"user_ip";s:13:"104.168.46.51";s:10:"user_agent";s:154:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 2.0.50727 ; .NET CLR 4.0.30319)";s:8:"referrer";s:24:"http://chjdev.com/about/";s:4:"blog";s:17:"http://chjdev.com";s:15:"SERVER_SOFTWARE";s:13:"Apache/2.4.10";s:11:"REQUEST_URI";s:7:"/about/";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"UNIQUE_ID";s:24:"VUfy-n8AAAEAACdm63kAAAAm";s:10:"SCRIPT_URL";s:7:"/about/";s:10:"SCRIPT_URI";s:24:"http://chjdev.com/about/";s:11:"SWFFONTPATH";s:22:"/usr/lib/libswf/fonts/";s:14:"PDFLIBRESOURCE";s:27:"/usr/local/fonts/pdflib.upr";s:9:"HTTP_HOST";s:10:"chjdev.com";s:15:"HTTP_CONNECTION";s:5:"close";s:11:"HTTP_ACCEPT";s:87:"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, */*";s:12:"HTTP_REFERER";s:24:"http://chjdev.com/about/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:15:"HTTP_USER_AGENT";s:154:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 2.0.50727 ; .NET CLR 4.0.30319)";s:20:"HTTP_ACCEPT_ENCODING";s:27:"gzip, deflate,gzip, deflate";s:14:"CONTENT_LENGTH";s:4:"1626";s:11:"SERVER_NAME";s:10:"chjdev.com";s:11:"SERVER_ADDR";s:14:"185.21.102.178";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"104.168.46.51";s:13:"DOCUMENT_ROOT";s:29:"/kunden/445816_6121/wordpress";s:12:"SERVER_ADMIN";s:20:"webmaster@chjdev.com";s:15:"SCRIPT_FILENAME";s:39:"/kunden/445816_6121/wordpress/index.php";s:11:"REMOTE_PORT";s:5:"31143";s:12:"REDIRECT_URL";s:7:"/about/";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:10:"/index.php";s:7:"DOCROOT";s:29:"/kunden/445816_6121/wordpress";s:8:"DOC_ROOT";s:29:"/kunden/445816_6121/wordpress";s:5:"PHPRC";s:78:"./:/etc/php.ini/5/445816/2177154:/etc/php.ini/5/445816:/usr/local/php54-SECURE";s:8:"PHP_SELF";s:10:"/index.php";s:18:"REQUEST_TIME_FLOAT";s:15:"1430778622.5358";s:12:"REQUEST_TIME";s:10:"1430778622";s:4:"argc";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_feedback_email</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:16:"chjdev@gmail.com";}s:7:"message";s:1636:"Name: Brigitte
Email: pttewhd@ymail.com
Comment: Hi, my name is Brigitte and I am the marketing manager at SwingSEO Solutions. I was just looking at your About | Things on a Heap site and see that your website has the potential to get a lot of visitors. I just want to tell you, In case you don't already know... There is a website network which already has more than 16 million users, and the majority of the users are looking for topics like yours. By getting your website on this service you have a chance to get your site more popular than you can imagine. It is free to sign up and you can read more about it here: http://stg2bio.co/10fz - Now, let me ask you... Do you need your site to be successful to maintain your way of life? Do you need targeted traffic who are interested in the services and products you offer? Are looking for exposure, to increase sales, and to quickly develop awareness for your site? If your answer is YES, you can achieve these things only if you get your website on the network I am describing. This traffic service advertises you to thousands, while also giving you a chance to test the service before paying anything. All the popular websites are using this service to boost their traffic and ad revenue! Why aren’t you? And what is better than traffic? It’s recurring traffic! That's how running a successful website works... Here's to your success! Read more here: http://stg2bio.co/10fz  - or to unsubscribe please go here: http://todochiapas.mx/C/36p

Time: 2015-05-05 at 00:30
IP Address: 104.168.46.51
Contact Form URL: http://chjdev.com/about/
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Jacqueline - 2015-06-16 11:48:56</title>
		<link>http://chjdev.com/?post_type=feedback&#038;p=174</link>
		<pubDate>Tue, 16 Jun 2015 09:48:56 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/?post_type=feedback&#038;p=174</guid>
		<description></description>
		<content:encoded><![CDATA[Hi my name is Jacqueline and I just wanted to drop you a quick note here instead of calling you. I discovered your About | Things on a Heap page and noticed you could have a lot more visitors. I have found that the key to running a successful website is making sure the visitors you are getting are interested in your subject matter. There is a company that you can get targeted traffic from and they let you try the service for free for 7 days. I managed to get over 300 targeted visitors to day to my site. Visit them here: http://t8k.me/wl
Jacqueline http://www.arvut.org/1/ddo
<!--more-->
AUTHOR: Jacqueline
AUTHOR EMAIL: hqbomu@hotmail.fr
AUTHOR URL: 
SUBJECT: [Things on a Heap] About
IP: 104.168.71.60
Array
(
    [1_Name] =&gt; Jacqueline
    [2_Email] =&gt; hqbomu@hotmail.fr
    [3_Comment] =&gt; Hi my name is Jacqueline and I just wanted to drop you a quick note here instead of calling you. I discovered your About | Things on a Heap page and noticed you could have a lot more visitors. I have found that the key to running a successful website is making sure the visitors you are getting are interested in your subject matter. There is a company that you can get targeted traffic from and they let you try the service for free for 7 days. I managed to get over 300 targeted visitors to day to my site. Visit them here: http://t8k.me/wl
Jacqueline http://www.arvut.org/1/ddo
)
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date>2015-06-16 11:48:56</wp:post_date>
		<wp:post_date_gmt>2015-06-16 09:48:56</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>905e7ef6067285bfde5adff495b3d7e9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>2</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>feedback</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_feedback_extra_fields</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_feedback_akismet_values</wp:meta_key>
			<wp:meta_value><![CDATA[a:48:{s:14:"comment_author";s:10:"Jacqueline";s:20:"comment_author_email";s:17:"hqbomu@hotmail.fr";s:18:"comment_author_url";s:0:"";s:20:"contact_form_subject";s:24:"[Things on a Heap] About";s:17:"comment_author_IP";s:13:"104.168.71.60";s:15:"comment_content";s:581:"Hi my name is Jacqueline and I just wanted to drop you a quick note here instead of calling you. I discovered your About | Things on a Heap page and noticed you could have a lot more visitors. I have found that the key to running a successful website is making sure the visitors you are getting are interested in your subject matter. There is a company that you can get targeted traffic from and they let you try the service for free for 7 days. I managed to get over 300 targeted visitors to day to my site. Visit them here: http://t8k.me/wl
Jacqueline http://www.arvut.org/1/ddo";s:12:"comment_type";s:12:"contact_form";s:7:"user_ip";s:13:"104.168.71.60";s:10:"user_agent";s:154:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 2.0.50727 ; .NET CLR 4.0.30319)";s:8:"referrer";s:24:"http://chjdev.com/about/";s:4:"blog";s:17:"http://chjdev.com";s:15:"SERVER_SOFTWARE";s:13:"Apache/2.4.10";s:11:"REQUEST_URI";s:7:"/about/";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"UNIQUE_ID";s:24:"VX-xCH8AAAEAAD1iX1wAAAAN";s:10:"SCRIPT_URL";s:7:"/about/";s:10:"SCRIPT_URI";s:24:"http://chjdev.com/about/";s:11:"SWFFONTPATH";s:22:"/usr/lib/libswf/fonts/";s:14:"PDFLIBRESOURCE";s:27:"/usr/local/fonts/pdflib.upr";s:9:"HTTP_HOST";s:10:"chjdev.com";s:11:"HTTP_ACCEPT";s:87:"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, */*";s:12:"HTTP_REFERER";s:24:"http://chjdev.com/about/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:15:"HTTP_USER_AGENT";s:154:"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; .NET CLR 2.0.50727 ; .NET CLR 4.0.30319)";s:14:"CONTENT_LENGTH";s:3:"710";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:11:"SERVER_NAME";s:10:"chjdev.com";s:11:"SERVER_ADDR";s:14:"185.21.102.178";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"104.168.71.60";s:13:"DOCUMENT_ROOT";s:29:"/kunden/445816_6121/wordpress";s:12:"SERVER_ADMIN";s:20:"webmaster@chjdev.com";s:15:"SCRIPT_FILENAME";s:39:"/kunden/445816_6121/wordpress/index.php";s:11:"REMOTE_PORT";s:5:"47651";s:12:"REDIRECT_URL";s:7:"/about/";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:10:"/index.php";s:7:"DOCROOT";s:29:"/kunden/445816_6121/wordpress";s:8:"DOC_ROOT";s:29:"/kunden/445816_6121/wordpress";s:5:"PHPRC";s:78:"./:/etc/php.ini/5/445816/2177154:/etc/php.ini/5/445816:/usr/local/php54-SECURE";s:8:"PHP_SELF";s:10:"/index.php";s:18:"REQUEST_TIME_FLOAT";s:15:"1434448136.3418";s:12:"REQUEST_TIME";s:10:"1434448136";s:4:"argc";s:1:"0";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_feedback_email</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:16:"chjdev@gmail.com";}s:7:"message";s:772:"Name: Jacqueline
Email: hqbomu@hotmail.fr
Comment: Hi my name is Jacqueline and I just wanted to drop you a quick note here instead of calling you. I discovered your About | Things on a Heap page and noticed you could have a lot more visitors. I have found that the key to running a successful website is making sure the visitors you are getting are interested in your subject matter. There is a company that you can get targeted traffic from and they let you try the service for free for 7 days. I managed to get over 300 targeted visitors to day to my site. Visit them here: http://t8k.me/wl
Jacqueline http://www.arvut.org/1/ddo

Time: 2015-06-16 at 11:48
IP Address: 104.168.71.60
Contact Form URL: http://chjdev.com/about/
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Profile</title>
		<link>http://chjdev.com/?attachment_id=179</link>
		<pubDate>Mon, 29 Jun 2015 13:14:11 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/wp-content/uploads/2014/04/2b94b43.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date>2015-06-29 15:14:11</wp:post_date>
		<wp:post_date_gmt>2015-06-29 13:14:11</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2b94b43</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>2</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://chjdev.com/wp-content/uploads/2014/04/2b94b43.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2014/04/2b94b43.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:200;s:4:"file";s:19:"2014/04/2b94b43.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"2b94b43-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:11:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";s:11:"orientation";i:0;}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>About</title>
		<link>http://chjdev.com/about/</link>
		<pubDate>Mon, 29 Jun 2015 13:19:55 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/?page_id=182</guid>
		<description></description>
		<content:encoded><![CDATA[Just a little blog to write about things I'm learning.
If you need a freelancer who loves to solve cool problems, hop over to the <code><strong><a href="http://chjdev.com/freelancer/">Freelancer</a></strong></code> page.

If you want to get in touch, I'm <code><strong>chjdev</strong></code> across all major sites.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date>2015-06-29 15:19:55</wp:post_date>
		<wp:post_date_gmt>2015-06-29 13:19:55</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_before</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_after</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>content_columns</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://chjdev.com/183/</link>
		<pubDate>Mon, 29 Jun 2015 13:19:55 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/183/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>183</wp:post_id>
		<wp:post_date>2015-06-29 15:19:55</wp:post_date>
		<wp:post_date_gmt>2015-06-29 13:19:55</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>183</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="menu"><![CDATA[Menu]]></category>
		<wp:postmeta>
			<wp:meta_key>hefo_before</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hefo_after</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>content_columns</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[182]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Posts</title>
		<link>http://chjdev.com/home-2/</link>
		<pubDate>Tue, 30 Jun 2015 08:36:20 +0000</pubDate>
		<dc:creator><![CDATA[chjdev]]></dc:creator>
		<guid isPermaLink="false">http://chjdev.com/?p=191</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>191</wp:post_id>
		<wp:post_date>2015-06-30 10:36:20</wp:post_date>
		<wp:post_date_gmt>2015-06-30 08:36:20</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>home-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="menu"><![CDATA[Menu]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://chjdev.com/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[191]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
